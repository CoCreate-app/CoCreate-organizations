(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["CoCreateOrganizations"] = factory();
	else
		root["CoCreateOrganizations"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/CoCreate-organizations.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/CoCreate-organizations.js":
/*!***************************************!*\
  !*** ./src/CoCreate-organizations.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar CoCreateOrganization = {\n  masterDB: '5ae0cfac6fb8c4e656fdaf92',\n  // '5ae0cfac6fb8c4e656fdaf92' /** masterDB **/,\n  init: function init() {\n    var self = this;\n    CoCreateSocket.listen('createOrg', function (data) {\n      self.setDocumentId('organizations', data.document_id);\n      document.dispatchEvent(new CustomEvent('createdOrg', {\n        detail: data\n      }));\n    });\n    CoCreateSocket.listen('createUser', function (data) {\n      self.setDocumentId('users', data.document_id);\n      document.dispatchEvent(new CustomEvent('createdUser', {\n        detail: data\n      }));\n    });\n    CoCreateSocket.listen('runIndustry', function (data) {\n      self.runIndustryProcess(data);\n      document.dispatchEvent(new CustomEvent('runIndustry', {\n        detail: data\n      }));\n    });\n    CoCreateSocket.listen('createIndustryNew', function (data) {\n      console.log(data);\n      document.dispatchEvent(new CustomEvent('createIndustry', {\n        detail: data\n      }));\n    });\n  },\n  createOrg: function createOrg(btn) {\n    var form = btn.closest(\"form\");\n    if (!form) return;\n    var elements = form.querySelectorAll(\"[data-collection='organizations'][name]\");\n    var data = {}; //. get form data\n\n    elements.forEach(function (el) {\n      var name = el.getAttribute('name');\n      var value = CoCreateInput.getValue(el) || el.getAttribute('value');\n      if (!name || !value) return;\n\n      if (el.getAttribute('data-type') == 'array') {\n        value = [value];\n      }\n\n      data[name] = value;\n    });\n    var room = CoCreate.generateSocketClient();\n    CoCreateSocket.send('createOrg', {\n      apiKey: config.apiKey,\n      securityKey: config.securityKey,\n      organization_id: config.organization_Id,\n      db: this.masterDB,\n      collection: 'organizations',\n      data: data\n    }, room);\n  },\n  setDocumentId: function setDocumentId(collection, id) {\n    var orgIdElements = document.querySelectorAll(\"[data-collection='\".concat(collection, \"']\"));\n\n    if (orgIdElements && orgIdElements.length > 0) {\n      orgIdElements.forEach(function (el) {\n        if (!el.getAttribute('data-document_id')) {\n          el.setAttribute('data-document_id', id);\n        }\n\n        if (el.getAttribute('name') == \"_id\") {\n          el.value = id;\n        }\n      });\n    }\n  },\n  createUser: function createUser(btn, reqData) {\n    var form = btn.closest(\"form\");\n    if (!form) return;\n    var org_id = \"\";\n    var elements = form.querySelectorAll(\"[data-collection='users'][name]\");\n    var orgIdElement = form.querySelector(\"input[data-collection='organizations'][name='_id']\");\n\n    if (orgIdElement) {\n      org_id = orgIdElement.value;\n    }\n\n    var data = {}; //. get form data\n\n    elements.forEach(function (el) {\n      var name = el.getAttribute('name');\n      var value = CoCreateInput.getValue(el) || el.getAttribute('value');\n      if (!name || !value) return;\n\n      if (el.getAttribute('data-type') == 'array') {\n        value = [value];\n      }\n\n      data[name] = value;\n    });\n    data['current_org'] = org_id;\n    data['connected_orgs'] = [org_id];\n    data['organization_id'] = org_id || config.organization_Id;\n    var room = CoCreate.generateSocketClient();\n    CoCreateSocket.send('createUser', {\n      apiKey: config.apiKey,\n      securityKey: config.securityKey,\n      organization_id: config.organization_Id,\n      db: this.masterDB,\n      collection: 'users',\n      data: data,\n      copyDB: org_id\n    }, room);\n  },\n\n  /** run industry action **/\n  runIndustry: function runIndustry(btn) {\n    var form = btn.closest('form');\n    if (!form) return;\n    var industrySelect = form.querySelector(\"cocreate-select[name='industry']\");\n\n    if (industrySelect) {\n      var industry_id = CoCreateSelect.getValue(industrySelect);\n      var newOrgId = industrySelect.getAttribute('data-document_id');\n\n      if (industry_id && newOrgId) {\n        CoCreateSocket.send('runIndustry', {\n          apiKey: config.apiKey,\n          securityKey: config.securityKey,\n          organization_id: config.organization_Id,\n          industry_id: industry_id,\n          new_organization_id: newOrgId,\n          db: this.masterDB\n        });\n      }\n    }\n  },\n  runIndustryProcess: function runIndustryProcess(data) {\n    var industryBtn = document.querySelector('[data-actions]');\n\n    if (industryBtn) {\n      var form = industryBtn.form;\n      if (!form) return;\n      var industrySelect = form.querySelector(\"cocreate-select[name='industry']\");\n\n      if (industrySelect) {\n        var industry_id = CoCreateSelect.getValue(industrySelect);\n        var newOrgId = industrySelect.getAttribute('data-document_id');\n\n        if (industry_id == data['industry_id'] && newOrgId) {\n          var apiKeyInput = form.querySelector(\"input[name='apiKey']\");\n          var securityKeyInput = form.querySelector(\"input[name='securityKey']\"); // CoCreate.updateDocument({\n          // \tcollection: 'organizations',\n          // \tdocument_id: newOrgId,\n          // \tdata: {\n          // \t\tadminUI_id: data['adminUI_id'],\n          // \t\tbuilderUI_id: data['builderUI_id']\n          // \t}\n          // })\n        }\n      }\n    }\n\n    if (data['adminUI_id']) localStorage.setItem('adminUI_id', data['adminUI_id']);\n    if (data['builderUI_id']) localStorage.setItem('builderUI_id', data['builderUI_id']); // document.dispatchEvent(new CustomEvent('runIndustry'), {\n    // \tdetail: data\n    // })\n  },\n  createIndustryDocument: function createIndustryDocument(btn) {\n    var form = btn.closest(\"form\");\n    if (!form) return;\n    var elements = form.querySelectorAll(\"[data-collection='industries'][name]\");\n    var data = {}; //. get form data\n\n    elements.forEach(function (el) {\n      var name = el.getAttribute('name');\n      var value = CoCreateInput.getValue(el) || el.getAttribute('value');\n      if (!name || !value) return;\n\n      if (el.getAttribute('data-type') == 'array') {\n        value = [value];\n      }\n\n      data[name] = value;\n    });\n    var room = CoCreate.generateSocketClient();\n    console.log(data);\n    data['organization_id'] = config.organization_Id; // return;\n\n    CoCreateSocket.send('createIndustryNew', {\n      apiKey: config.apiKey,\n      securityKey: config.securityKey,\n      organization_id: config.organization_Id,\n      db: this.masterDB,\n      collection: 'industries',\n      data: data\n    }, room);\n  }\n};\nCoCreateOrganization.init();\nCoCreateAction.registerEvent(\"createOrg\", CoCreateOrganization.createOrg, CoCreateOrganization, \"createdOrg\");\nCoCreateAction.registerEvent(\"createUser\", CoCreateOrganization.createUser, CoCreateOrganization, \"createdUser\");\nCoCreateAction.registerEvent(\"runIndustry\", CoCreateOrganization.runIndustry, CoCreateOrganization, \"runIndustry\");\nCoCreateAction.registerEvent(\"createIndustry\", CoCreateOrganization.createIndustryDocument, CoCreateOrganization, \"createdIndustry\");\n/* harmony default export */ __webpack_exports__[\"default\"] = (CoCreateOrganization);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/CoCreate-organizations.js\n");

/***/ })

/******/ })["default"];
});
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["CoCreateOrganizations"] = factory();
	else
		root["CoCreateOrganizations"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/CoCreate-organizations.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/CoCreate-organizations.js":
/*!***************************************!*\
  !*** ./src/CoCreate-organizations.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar CoCreateOrganization = {\n  masterDB: '5ae0cfac6fb8c4e656fdaf92',\n  // '5ae0cfac6fb8c4e656fdaf92' /** masterDB **/,\n  init: function init() {\n    if (config.organization_Id) {\n      this.masterDB = config.organization_Id;\n    }\n\n    var self = this;\n    CoCreate.socket.listen('createOrg', function (data) {\n      self.setDocumentId('organizations', data.document_id);\n      document.dispatchEvent(new CustomEvent('createdOrg', {\n        detail: data\n      }));\n    });\n    CoCreate.socket.listen('createUser', function (data) {\n      self.setDocumentId('users', data.document_id);\n      document.dispatchEvent(new CustomEvent('createdUser', {\n        detail: data\n      }));\n    });\n    CoCreate.socket.listen('runIndustry', function (data) {\n      self.runIndustryProcess(data);\n      document.dispatchEvent(new CustomEvent('runIndustry', {\n        detail: data\n      }));\n    });\n    CoCreate.socket.listen('createIndustryNew', function (data) {\n      console.log(data);\n      document.dispatchEvent(new CustomEvent('createIndustry', {\n        detail: data\n      }));\n    });\n  },\n  createOrg: function createOrg(btn) {\n    var form = btn.closest(\"form\");\n    if (!form) return;\n    var elements = form.querySelectorAll(\"[data-collection='organizations'][name]\");\n    var data = {}; //. get form data\n\n    elements.forEach(function (el) {\n      var name = el.getAttribute('name');\n      var value = CoCreateInput.getValue(el) || el.getAttribute('value');\n      if (!name || !value) return;\n\n      if (el.getAttribute('data-type') == 'array') {\n        value = [value];\n      }\n\n      data[name] = value;\n    });\n    var room = CoCreate.generateSocketClient();\n    CoCreate.socket.send('createOrg', {\n      apiKey: config.apiKey,\n      securityKey: config.securityKey,\n      organization_id: config.organization_Id,\n      db: this.masterDB,\n      collection: 'organizations',\n      data: data\n    }, room);\n  },\n  setDocumentId: function setDocumentId(collection, id) {\n    var orgIdElements = document.querySelectorAll(\"[data-collection='\".concat(collection, \"']\"));\n\n    if (orgIdElements && orgIdElements.length > 0) {\n      orgIdElements.forEach(function (el) {\n        if (!el.getAttribute('data-document_id')) {\n          el.setAttribute('data-document_id', id);\n        }\n\n        if (el.getAttribute('name') == \"_id\") {\n          el.value = id;\n        }\n      });\n    }\n  },\n  createUser: function createUser(btn, reqData) {\n    var form = btn.closest(\"form\");\n    if (!form) return;\n    var org_id = \"\";\n    var elements = form.querySelectorAll(\"[data-collection='users'][name]\");\n    var orgIdElement = form.querySelector(\"input[data-collection='organizations'][name='_id']\");\n\n    if (orgIdElement) {\n      org_id = orgIdElement.value;\n    }\n\n    var data = {}; //. get form data\n\n    elements.forEach(function (el) {\n      var name = el.getAttribute('name');\n      var value = CoCreateInput.getValue(el) || el.getAttribute('value');\n      if (!name || !value) return;\n\n      if (el.getAttribute('data-type') == 'array') {\n        value = [value];\n      }\n\n      data[name] = value;\n    });\n    data['current_org'] = org_id;\n    data['connected_orgs'] = [org_id];\n    data['organization_id'] = org_id || config.organization_Id;\n    var room = CoCreate.generateSocketClient();\n    CoCreate.socket.send('createUser', {\n      apiKey: config.apiKey,\n      securityKey: config.securityKey,\n      organization_id: config.organization_Id,\n      db: this.masterDB,\n      collection: 'users',\n      data: data,\n      copyDB: org_id\n    }, room);\n  },\n\n  /** run industry action **/\n  runIndustry: function runIndustry(btn) {\n    var form = btn.closest('form');\n    if (!form) return;\n    var industrySelect = form.querySelector(\"cocreate-select[name='industry']\");\n\n    if (industrySelect) {\n      var industry_id = CoCreateSelect.getValue(industrySelect);\n      var newOrgId = industrySelect.getAttribute('data-document_id');\n\n      if (industry_id && newOrgId) {\n        CoCreate.socket.send('runIndustry', {\n          apiKey: config.apiKey,\n          securityKey: config.securityKey,\n          organization_id: config.organization_Id,\n          industry_id: industry_id,\n          new_organization_id: newOrgId,\n          db: this.masterDB\n        });\n      }\n    }\n  },\n  runIndustryProcess: function runIndustryProcess(data) {\n    var industryBtn = document.querySelector('[data-actions]');\n\n    if (industryBtn) {\n      var form = industryBtn.form;\n      if (!form) return;\n      var industrySelect = form.querySelector(\"cocreate-select[name='industry']\");\n\n      if (industrySelect) {\n        var industry_id = CoCreateSelect.getValue(industrySelect);\n        var newOrgId = industrySelect.getAttribute('data-document_id');\n\n        if (industry_id == data['industry_id'] && newOrgId) {\n          var apiKeyInput = form.querySelector(\"input[name='apiKey']\");\n          var securityKeyInput = form.querySelector(\"input[name='securityKey']\"); // CoCreate.crud.updateDocument({\n          // \tcollection: 'organizations',\n          // \tdocument_id: newOrgId,\n          // \tdata: {\n          // \t\tadminUI_id: data['adminUI_id'],\n          // \t\tbuilderUI_id: data['builderUI_id']\n          // \t}\n          // })\n        }\n      }\n    }\n\n    if (data['adminUI_id']) localStorage.setItem('adminUI_id', data['adminUI_id']);\n    if (data['builderUI_id']) localStorage.setItem('builderUI_id', data['builderUI_id']); // document.dispatchEvent(new CustomEvent('runIndustry'), {\n    // \tdetail: data\n    // })\n  },\n  createIndustryDocument: function createIndustryDocument(btn) {\n    var form = btn.closest(\"form\");\n    if (!form) return;\n    var elements = form.querySelectorAll(\"[data-collection='industries'][name]\");\n    var data = {}; //. get form data\n\n    elements.forEach(function (el) {\n      var name = el.getAttribute('name');\n      var value = CoCreateInput.getValue(el) || el.getAttribute('value');\n      if (!name || !value) return;\n\n      if (el.getAttribute('data-type') == 'array') {\n        value = [value];\n      }\n\n      data[name] = value;\n    });\n    var room = CoCreate.generateSocketClient();\n    console.log(data);\n    data['organization_id'] = config.organization_Id; // return;\n\n    CoCreate.socket.send('createIndustryNew', {\n      apiKey: config.apiKey,\n      securityKey: config.securityKey,\n      organization_id: config.organization_Id,\n      db: this.masterDB,\n      collection: 'industries',\n      data: data\n    }, room);\n  }\n};\nCoCreateOrganization.init();\nCoCreate.actions.registerEvent(\"createOrg\", CoCreateOrganization.createOrg, CoCreateOrganization, \"createdOrg\");\nCoCreate.actions.registerEvent(\"createUser\", CoCreateOrganization.createUser, CoCreateOrganization, \"createdUser\");\nCoCreate.actions.registerEvent(\"runIndustry\", CoCreateOrganization.runIndustry, CoCreateOrganization, \"runIndustry\");\nCoCreate.actions.registerEvent(\"createIndustry\", CoCreateOrganization.createIndustryDocument, CoCreateOrganization, \"createdIndustry\");\n/* harmony default export */ __webpack_exports__[\"default\"] = (CoCreateOrganization);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZU9yZ2FuaXphdGlvbnMvLi9zcmMvQ29DcmVhdGUtb3JnYW5pemF0aW9ucy5qcz9mZTZiIl0sIm5hbWVzIjpbIkNvQ3JlYXRlT3JnYW5pemF0aW9uIiwibWFzdGVyREIiLCJpbml0IiwiY29uZmlnIiwib3JnYW5pemF0aW9uX0lkIiwic2VsZiIsIkNvQ3JlYXRlU29ja2V0IiwibGlzdGVuIiwiZGF0YSIsInNldERvY3VtZW50SWQiLCJkb2N1bWVudF9pZCIsImRvY3VtZW50IiwiZGlzcGF0Y2hFdmVudCIsIkN1c3RvbUV2ZW50IiwiZGV0YWlsIiwicnVuSW5kdXN0cnlQcm9jZXNzIiwiY29uc29sZSIsImxvZyIsImNyZWF0ZU9yZyIsImJ0biIsImZvcm0iLCJjbG9zZXN0IiwiZWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsImVsIiwibmFtZSIsImdldEF0dHJpYnV0ZSIsInZhbHVlIiwiQ29DcmVhdGVJbnB1dCIsImdldFZhbHVlIiwicm9vbSIsIkNvQ3JlYXRlIiwiZ2VuZXJhdGVTb2NrZXRDbGllbnQiLCJzZW5kIiwiYXBpS2V5Iiwic2VjdXJpdHlLZXkiLCJvcmdhbml6YXRpb25faWQiLCJkYiIsImNvbGxlY3Rpb24iLCJpZCIsIm9yZ0lkRWxlbWVudHMiLCJsZW5ndGgiLCJzZXRBdHRyaWJ1dGUiLCJjcmVhdGVVc2VyIiwicmVxRGF0YSIsIm9yZ19pZCIsIm9yZ0lkRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb3B5REIiLCJydW5JbmR1c3RyeSIsImluZHVzdHJ5U2VsZWN0IiwiaW5kdXN0cnlfaWQiLCJDb0NyZWF0ZVNlbGVjdCIsIm5ld09yZ0lkIiwibmV3X29yZ2FuaXphdGlvbl9pZCIsImluZHVzdHJ5QnRuIiwiYXBpS2V5SW5wdXQiLCJzZWN1cml0eUtleUlucHV0IiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsImNyZWF0ZUluZHVzdHJ5RG9jdW1lbnQiLCJDb0NyZWF0ZUFjdGlvbiIs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QUFjLENBQUNDLGFBQWYsQ0FBNkIsWUFBN0IsRUFBMkMvRCxvQkFBb0IsQ0FBQzRDLFVBQWhFLEVBQTRFNUMsb0JBQTVFLEVBQWtHLGFBQWxHO0FBQ0E4RCxjQUFjLENBQUNDLGFBQWYsQ0FBNkIsYUFBN0IsRUFBNEMvRCxvQkFBb0IsQ0FBQ2tELFdBQWpFLEVBQThFbEQsb0JBQTlFLEVBQW9HLGFBQXBHO0FBQ0E4RCxjQUFjLENBQUNDLGFBQWYsQ0FBNkIsZ0JBQTdCLEVBQStDL0Qsb0JBQW9CLENBQUM2RCxzQkFBcEUsRUFBNEY3RCxvQkFBNUYsRUFBa0gsaUJBQWxIO0FBRWVBLG1GQUFmIiwiZmlsZSI6Ii4vc3JjL0NvQ3JlYXRlLW9yZ2FuaXphdGlvbnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDb0NyZWF0ZU9yZ2FuaXphdGlvbiA9IHtcblx0bWFzdGVyREI6ICc1YWUwY2ZhYzZmYjhjNGU2NTZmZGFmOTInLCAvLyAnNWFlMGNmYWM2ZmI4YzRlNjU2ZmRhZjkyJyAvKiogbWFzdGVyREIgKiovLFxuXHRpbml0OiBmdW5jdGlvbigpIHtcblx0XHRcblx0XHRpZiAoY29uZmlnLm9yZ2FuaXphdGlvbl9JZCkge1xuXHRcdFx0dGhpcy5tYXN0ZXJEQiA9IGNvbmZpZy5vcmdhbml6YXRpb25fSWQ7XG5cdFx0fVxuXHRcdGNvbnN0IHNlbGYgPSB0aGlzO1xuXHRcdENvQ3JlYXRlU29ja2V0Lmxpc3RlbignY3JlYXRlT3JnJywgZnVuY3Rpb24oZGF0YSkge1xuXHRcdFx0c2VsZi5zZXREb2N1bWVudElkKCdvcmdhbml6YXRpb25zJywgZGF0YS5kb2N1bWVudF9pZCk7XG5cdFx0XHRkb2N1bWVudC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnY3JlYXRlZE9yZycsIHtcblx0XHRcdFx0ZGV0YWlsOiBkYXRhXG5cdFx0XHR9KSlcblx0XHR9KVxuXHRcdFxuXHRcdENvQ3JlYXRlU29ja2V0Lmxpc3RlbignY3JlYXRlVXNlcicsIGZ1bmN0aW9uKGRhdGEpIHtcblx0XHRcdHNlbGYuc2V0RG9jdW1lbnRJZCgndXNlcnMnLCBkYXRhLmRvY3VtZW50X2lkKTtcblx0XHRcdGRvY3VtZW50LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdjcmVhdGVkVXNlcicsIHtcblx0XHRcdFx0ZGV0YWlsOiBkYXRhXG5cdFx0XHR9KSlcblx0XHR9KVxuXHRcdFxuXHRcdENvQ3JlYXRlU29ja2V0Lmxpc3RlbigncnVuSW5kdXN0cnknLCBmdW5jdGlvbihkYXRhKSB7XG5cdFx0XHRzZWxmLnJ1bkluZHVzdHJ5UHJvY2VzcyhkYXRhKVxuXHRcdFx0ZG9jdW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoJ3J1bkluZHVzdHJ5Jywge1xuXHRcdFx0XHRkZXRhaWw6IGRhdGFcblx0XHRcdH0pKVxuXHRcdH0pXG5cdFx0XG5cdFx0Q29DcmVhdGVTb2NrZXQubGlzdGVuKCdjcmVhdGVJbmR1c3RyeU5ldycsIGZ1bmN0aW9uKGRhdGEpIHtcblx0XHRcdGNvbnNvbGUubG9nKGRhdGEpXG5cdFx0XHRkb2N1bWVudC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgnY3JlYXRlSW5kdXN0cnknLCB7XG5cdFx0XHRcdGRldGFpbDogZGF0YVxuXHRcdFx0fSkpXG5cdFx0fSlcblx0fSxcblx0XG5cdGNyZWF0ZU9yZzogZnVuY3Rpb24oYnRuKSB7XG5cdFx0bGV0IGZvcm0gPSBidG4uY2xvc2VzdChcImZvcm1cIik7XG5cdFx0aWYgKCFmb3JtKSByZXR1cm47XG5cdFx0XG5cdFx0bGV0IGVsZW1lbnRzID0gZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtY29sbGVjdGlvbj0nb3JnYW5pemF0aW9ucyddW25hbWVdXCIpO1xuXHRcdFxuXHRcdGxldCBkYXRhID0ge307XG5cdFx0Ly8uIGdldCBmb3JtIGRhdGFcblx0XHRlbGVtZW50cy5mb3JFYWNoKGVsID0+IHtcblx0XHRcdGxldCBuYW1lID0gZWwuZ2V0QXR0cmlidXRlKCduYW1lJylcblx0XHRcdGxldCB2YWx1ZSA9IENvQ3JlYXRlSW5wdXQuZ2V0VmFsdWUoZWwpIHx8IGVsLmdldEF0dHJpYnV0ZSgndmFsdWUnKVxuXHRcdFx0aWYgKCFuYW1lIHx8ICF2YWx1ZSkgcmV0dXJuO1xuXHRcdFx0aWYgKGVsLmdldEF0dHJpYnV0ZSgnZGF0YS10eXBlJykgPT0gJ2FycmF5Jykge1xuXHRcdFx0XHR2YWx1ZSA9IFt2YWx1ZV07XG5cdFx0XHR9XG5cdFx0XHRkYXRhW25hbWVdID0gdmFsdWU7XG5cdFx0fSlcblx0XHRjb25zdCByb29tID0gQ29DcmVhdGUuZ2VuZXJhdGVTb2NrZXRDbGllbnQoKTtcblx0XHRcblx0XHRDb0NyZWF0ZVNvY2tldC5zZW5kKCdjcmVhdGVPcmcnLCB7XG5cdFx0XHRhcGlLZXk6IGNvbmZpZy5hcGlLZXksXG5cdFx0XHRzZWN1cml0eUtleTogY29uZmlnLnNlY3VyaXR5S2V5LFxuXHRcdFx0b3JnYW5pemF0aW9uX2lkOiBjb25maWcub3JnYW5pemF0aW9uX0lkLFxuXHRcdFx0ZGI6IHRoaXMubWFzdGVyREIsXG5cdFx0XHRjb2xsZWN0aW9uOiAnb3JnYW5pemF0aW9ucycsXG5cdFx0XHRkYXRhOiBkYXRhXG5cdFx0fSwgcm9vbSk7XG5cdH0sXG5cdFxuXHRzZXREb2N1bWVudElkOiBmdW5jdGlvbihjb2xsZWN0aW9uLCBpZCkge1xuXHRcdGxldCBvcmdJZEVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgW2RhdGEtY29sbGVjdGlvbj0nJHtjb2xsZWN0aW9ufSddYCk7XG5cdFx0aWYgKG9yZ0lkRWxlbWVudHMgJiYgb3JnSWRFbGVtZW50cy5sZW5ndGggPiAwKSB7XG5cdFx0XHRvcmdJZEVsZW1lbnRzLmZvckVhY2goKGVsKSA9PiB7XG5cdFx0XHRcdGlmICghZWwuZ2V0QXR0cmlidXRlKCdkYXRhLWRvY3VtZW50X2lkJykpIHtcblx0XHRcdFx0XHRlbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtZG9jdW1lbnRfaWQnLCBpZCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKGVsLmdldEF0dHJpYnV0ZSgnbmFtZScpID09IFwiX2lkXCIpIHtcblx0XHRcdFx0XHRlbC52YWx1ZSA9IGlkO1xuXHRcdFx0XHR9XG5cdFx0XHR9KVxuXHRcdH1cblx0fSxcblxuXHRjcmVhdGVVc2VyOiBmdW5jdGlvbihidG4sIHJlcURhdGEpIHtcblx0XHRsZXQgZm9ybSA9IGJ0bi5jbG9zZXN0KFwiZm9ybVwiKTtcblx0XHRpZiAoIWZvcm0pIHJldHVybjtcblx0XHRsZXQgb3JnX2lkID0gXCJcIjtcblx0XHRsZXQgZWxlbWVudHMgPSBmb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1jb2xsZWN0aW9uPSd1c2VycyddW25hbWVdXCIpO1xuXHRcdGxldCBvcmdJZEVsZW1lbnQgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFtkYXRhLWNvbGxlY3Rpb249J29yZ2FuaXphdGlvbnMnXVtuYW1lPSdfaWQnXVwiKTtcblx0XHRcblx0XHRpZiAob3JnSWRFbGVtZW50KSB7XG5cdFx0XHRvcmdfaWQgPSBvcmdJZEVsZW1lbnQudmFsdWU7XG5cdFx0fVxuXHRcdGxldCBkYXRhID0ge307XG5cdFx0Ly8uIGdldCBmb3JtIGRhdGFcblx0XHRlbGVtZW50cy5mb3JFYWNoKGVsID0+IHtcblx0XHRcdGxldCBuYW1lID0gZWwuZ2V0QXR0cmlidXRlKCduYW1lJylcblx0XHRcdGxldCB2YWx1ZSA9IENvQ3JlYXRlSW5wdXQuZ2V0VmFsdWUoZWwpIHx8IGVsLmdldEF0dHJpYnV0ZSgndmFsdWUnKVxuXHRcdFx0aWYgKCFuYW1lIHx8ICF2YWx1ZSkgcmV0dXJuO1xuXHRcdFx0XG5cdFx0XHRpZiAoZWwuZ2V0QXR0cmlidXRlKCdkYXRhLXR5cGUnKSA9PSAnYXJyYXknKSB7XG5cdFx0XHRcdHZhbHVlID0gW3ZhbHVlXTtcblx0XHRcdH1cblx0XHRcdGRhdGFbbmFtZV0gPSB2YWx1ZTtcblx0XHR9KVxuXHRcdGRhdGFbJ2N1cnJlbnRfb3JnJ10gPSBvcmdfaWQ7XG5cdFx0ZGF0YVsnY29ubmVjdGVkX29yZ3MnXSA9IFtvcmdfaWRdO1xuXHRcdGRhdGFbJ29yZ2FuaXphdGlvbl9pZCddID0gb3JnX2lkIHx8IGNvbmZpZy5vcmdhbml6YXRpb25fSWQ7XG5cdFx0XG5cdFx0Y29uc3Qgcm9vbSA9IENvQ3JlYXRlLmdlbmVyYXRlU29ja2V0Q2xpZW50KCk7XG5cblx0XHRDb0NyZWF0ZVNvY2tldC5zZW5kKCdjcmVhdGVVc2VyJywge1xuXHRcdFx0YXBpS2V5OiBjb25maWcuYXBpS2V5LFxuXHRcdFx0c2VjdXJpdHlLZXk6IGNvbmZpZy5zZWN1cml0eUtleSxcblx0XHRcdG9yZ2FuaXphdGlvbl9pZDogY29uZmlnLm9yZ2FuaXphdGlvbl9JZCxcblx0XHRcdGRiOiB0aGlzLm1hc3RlckRCLFxuXHRcdFx0Y29sbGVjdGlvbjogJ3VzZXJzJyxcblx0XHRcdGRhdGE6IGRhdGEsXG5cdFx0XHRjb3B5REI6IG9yZ19pZFxuXHRcdH0sIHJvb20pO1xuXHR9LFxuXHRcblx0LyoqIHJ1biBpbmR1c3RyeSBhY3Rpb24gKiovXG5cdHJ1bkluZHVzdHJ5OiBmdW5jdGlvbihidG4pIHtcblx0XHRjb25zdCBmb3JtID0gYnRuLmNsb3Nlc3QoJ2Zvcm0nKVxuXHRcdGlmICghZm9ybSkgcmV0dXJuO1xuXHRcdFxuXHRcdGNvbnN0IGluZHVzdHJ5U2VsZWN0ID0gZm9ybS5xdWVyeVNlbGVjdG9yKFwiY29jcmVhdGUtc2VsZWN0W25hbWU9J2luZHVzdHJ5J11cIilcblx0XHRpZiAoaW5kdXN0cnlTZWxlY3QpIHtcblx0XHRcdGNvbnN0IGluZHVzdHJ5X2lkID0gQ29DcmVhdGVTZWxlY3QuZ2V0VmFsdWUoaW5kdXN0cnlTZWxlY3QpXG5cdFx0XHRcblx0XHRcdGNvbnN0IG5ld09yZ0lkID0gaW5kdXN0cnlTZWxlY3QuZ2V0QXR0cmlidXRlKCdkYXRhLWRvY3VtZW50X2lkJyk7XG5cdFx0XHRcblx0XHRcdGlmIChpbmR1c3RyeV9pZCAmJiBuZXdPcmdJZCkge1xuXHRcdFx0XHRDb0NyZWF0ZVNvY2tldC5zZW5kKCdydW5JbmR1c3RyeScsIHtcblx0XHRcdFx0XHRhcGlLZXk6IGNvbmZpZy5hcGlLZXksXG5cdFx0XHRcdFx0c2VjdXJpdHlLZXk6IGNvbmZpZy5zZWN1cml0eUtleSxcblx0XHRcdFx0XHRvcmdhbml6YXRpb25faWQ6IGNvbmZpZy5vcmdhbml6YXRpb25fSWQsXG5cdFx0XHRcdFx0aW5kdXN0cnlfaWQ6IGluZHVzdHJ5X2lkLFxuXHRcdFx0XHRcdG5ld19vcmdhbml6YXRpb25faWQ6IG5ld09yZ0lkLFxuXHRcdFx0XHRcdGRiOiB0aGlzLm1hc3RlckRCXG5cdFx0XHRcdH0pXG5cdFx0XHR9XG5cdFx0XHRcblx0XHR9XG5cdH0sXG5cdFxuXHRydW5JbmR1c3RyeVByb2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHtcblx0XHRjb25zdCBpbmR1c3RyeUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWFjdGlvbnNdJyk7XG5cdFx0aWYgKGluZHVzdHJ5QnRuKSB7XG5cdFx0XHRjb25zdCBmb3JtID0gaW5kdXN0cnlCdG4uZm9ybTtcblx0XHRcdGlmICghZm9ybSkgcmV0dXJuO1xuXHRcdFx0XG5cdFx0XHRjb25zdCBpbmR1c3RyeVNlbGVjdCA9IGZvcm0ucXVlcnlTZWxlY3RvcihcImNvY3JlYXRlLXNlbGVjdFtuYW1lPSdpbmR1c3RyeSddXCIpO1xuXHRcdFx0aWYgKGluZHVzdHJ5U2VsZWN0KSB7XG5cdFx0XHRcdGNvbnN0IGluZHVzdHJ5X2lkID0gQ29DcmVhdGVTZWxlY3QuZ2V0VmFsdWUoaW5kdXN0cnlTZWxlY3QpXG5cdFx0XHRcdGNvbnN0IG5ld09yZ0lkID0gaW5kdXN0cnlTZWxlY3QuZ2V0QXR0cmlidXRlKCdkYXRhLWRvY3VtZW50X2lkJyk7XG5cdFx0XHRcdGlmIChpbmR1c3RyeV9pZCA9PSBkYXRhWydpbmR1c3RyeV9pZCddICYmIG5ld09yZ0lkKSB7XG5cdFx0XHRcdFx0Y29uc3QgYXBpS2V5SW5wdXQgPSBmb3JtLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFtuYW1lPSdhcGlLZXknXVwiKTtcblx0XHRcdFx0XHRjb25zdCBzZWN1cml0eUtleUlucHV0ID0gZm9ybS5xdWVyeVNlbGVjdG9yKFwiaW5wdXRbbmFtZT0nc2VjdXJpdHlLZXknXVwiKTtcblx0XHRcdFx0XHRcblx0XHRcdFx0XHQvLyBDb0NyZWF0ZS51cGRhdGVEb2N1bWVudCh7XG5cdFx0XHRcdFx0Ly8gXHRjb2xsZWN0aW9uOiAnb3JnYW5pemF0aW9ucycsXG5cdFx0XHRcdFx0Ly8gXHRkb2N1bWVudF9pZDogbmV3T3JnSWQsXG5cdFx0XHRcdFx0Ly8gXHRkYXRhOiB7XG5cdFx0XHRcdFx0Ly8gXHRcdGFkbWluVUlfaWQ6IGRhdGFbJ2FkbWluVUlfaWQnXSxcblx0XHRcdFx0XHQvLyBcdFx0YnVpbGRlclVJX2lkOiBkYXRhWydidWlsZGVyVUlfaWQnXVxuXHRcdFx0XHRcdC8vIFx0fVxuXHRcdFx0XHRcdC8vIH0pXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0XG5cdFx0aWYgKGRhdGFbJ2FkbWluVUlfaWQnXSkgXG5cdFx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYWRtaW5VSV9pZCcsIGRhdGFbJ2FkbWluVUlfaWQnXSk7XG5cblx0XHRpZiAoZGF0YVsnYnVpbGRlclVJX2lkJ10pIFxuXHRcdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2J1aWxkZXJVSV9pZCcsIGRhdGFbJ2J1aWxkZXJVSV9pZCddKTtcblx0XHRcblx0XHQvLyBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgncnVuSW5kdXN0cnknKSwge1xuXHRcdC8vIFx0ZGV0YWlsOiBkYXRhXG5cdFx0Ly8gfSlcblxuXHR9LFxuXHRcblx0Y3JlYXRlSW5kdXN0cnlEb2N1bWVudDogZnVuY3Rpb24oYnRuKSB7XG5cdFx0bGV0IGZvcm0gPSBidG4uY2xvc2VzdChcImZvcm1cIik7XG5cdFx0aWYgKCFmb3JtKSByZXR1cm47XG5cdFx0XG5cdFx0bGV0IGVsZW1lbnRzID0gZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtY29sbGVjdGlvbj0naW5kdXN0cmllcyddW25hbWVdXCIpO1xuXHRcdFxuXHRcdGxldCBkYXRhID0ge307XG5cdFx0Ly8uIGdldCBmb3JtIGRhdGFcblx0XHRlbGVtZW50cy5mb3JFYWNoKGVsID0+IHtcblx0XHRcdGxldCBuYW1lID0gZWwuZ2V0QXR0cmlidXRlKCduYW1lJylcblx0XHRcdGxldCB2YWx1ZSA9IENvQ3JlYXRlSW5wdXQuZ2V0VmFsdWUoZWwpIHx8IGVsLmdldEF0dHJpYnV0ZSgndmFsdWUnKVxuXHRcdFx0aWYgKCFuYW1lIHx8ICF2YWx1ZSkgcmV0dXJuO1xuXHRcdFx0aWYgKGVsLmdldEF0dHJpYnV0ZSgnZGF0YS10eXBlJykgPT0gJ2FycmF5Jykge1xuXHRcdFx0XHR2YWx1ZSA9IFt2YWx1ZV07XG5cdFx0XHR9XG5cdFx0XHRkYXRhW25hbWVdID0gdmFsdWU7XG5cdFx0fSlcblx0XHRcblx0XHRjb25zdCByb29tID0gQ29DcmVhdGUuZ2VuZXJhdGVTb2NrZXRDbGllbnQoKTtcblx0XHRjb25zb2xlLmxvZyhkYXRhKTtcblx0XHRcblx0XHRkYXRhWydvcmdhbml6YXRpb25faWQnXSA9IGNvbmZpZy5vcmdhbml6YXRpb25fSWQ7XG5cdFx0XG5cdFx0Ly8gcmV0dXJuO1xuXHRcdENvQ3JlYXRlU29ja2V0LnNlbmQoJ2NyZWF0ZUluZHVzdHJ5TmV3Jywge1xuXHRcdFx0YXBpS2V5OiBjb25maWcuYXBpS2V5LFxuXHRcdFx0c2VjdXJpdHlLZXk6IGNvbmZpZy5zZWN1cml0eUtleSxcblx0XHRcdG9yZ2FuaXphdGlvbl9pZDogY29uZmlnLm9yZ2FuaXphdGlvbl9JZCxcblx0XHRcdGRiOiB0aGlzLm1hc3RlckRCLFxuXHRcdFx0Y29sbGVjdGlvbjogJ2luZHVzdHJpZXMnLFxuXHRcdFx0ZGF0YTogZGF0YVxuXHRcdH0sIHJvb20pO1xuXHR9LFxufVxuXG5Db0NyZWF0ZU9yZ2FuaXphdGlvbi5pbml0KCk7XG5Db0NyZWF0ZUFjdGlvbi5yZWdpc3RlckV2ZW50KFwiY3JlYXRlT3JnXCIsIENvQ3JlYXRlT3JnYW5pemF0aW9uLmNyZWF0ZU9yZywgQ29DcmVhdGVPcmdhbml6YXRpb24sIFwiY3JlYXRlZE9yZ1wiKTtcbkNvQ3JlYXRlQWN0aW9uLnJlZ2lzdGVyRXZlbnQoXCJjcmVhdGVVc2VyXCIsIENvQ3JlYXRlT3JnYW5pemF0aW9uLmNyZWF0ZVVzZXIsIENvQ3JlYXRlT3JnYW5pemF0aW9uLCBcImNyZWF0ZWRVc2VyXCIpO1xuQ29DcmVhdGVBY3Rpb24ucmVnaXN0ZXJFdmVudChcInJ1bkluZHVzdHJ5XCIsIENvQ3JlYXRlT3JnYW5pemF0aW9uLnJ1bkluZHVzdHJ5LCBDb0NyZWF0ZU9yZ2FuaXphdGlvbiwgXCJydW5JbmR1c3RyeVwiKTtcbkNvQ3JlYXRlQWN0aW9uLnJlZ2lzdGVyRXZlbnQoXCJjcmVhdGVJbmR1c3RyeVwiLCBDb0NyZWF0ZU9yZ2FuaXphdGlvbi5jcmVhdGVJbmR1c3RyeURvY3VtZW50LCBDb0NyZWF0ZU9yZ2FuaXphdGlvbiwgXCJjcmVhdGVkSW5kdXN0cnlcIik7XG5cbmV4cG9ydCBkZWZhdWx0IENvQ3JlYXRlT3JnYW5pemF0aW9uOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/CoCreate-organizations.js\n");

/***/ })

/******/ })["default"];
});